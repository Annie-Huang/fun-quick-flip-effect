.quick-flip {
  /*--transition-duration: 0.325s;*/

  /* CAN DELETE: add to see things clearly. */
  --transition-duration: 3s;

  --timing-function: cubic-bezier(0.66, 0, 0.34, 1);
  /*   --timing-function: linear(0, 0.234 11.8%, 0.403 18.4%, 0.624 24.7%, 0.999 33.3%, 0.76 39.9%, 0.705 42.6%, 0.687 45.2%, 0.703 47.7%, 0.753 50.3%, 0.999 57.7%, 0.89 61.8%, 0.865 63.6%, 0.857 65.3%, 0.865 67%, 0.887 68.8%, 0.999 74.5%, 0.957 77.5%, 0.944 80.2%, 0.954 82.7%, 1 88.2%, 0.988 91.9%, 1); */

  /* CAN DELETE: add to see things clearly. */
  /*overflow-y: clip;*/

  /* CAN DELETE: add to see things clearly. */
  outline: 2px solid red;

  > * {
    /* inline elements can't use transforms */
    display: block;

    /*
    !!!!!! How does this work, explanation: !!!!!!
    1. translateY(-2lh) means translate 200% upwards of the line height value.
    2. transform var(--transition-duration) means transform in X amount of time.
    3. translate 0ms calc(var(--transition-duration) / 2); means take the delay of X/2 time, and then it gets to X/2 time, take no time (0ms) and do the translate effect straight away.
       Be aware of any time value need to use '0ms', '0' will not work.
    4. translate: 0 2lh; means translate downwards 200% of the line height value while keep the x-axis position unchanged.
    5. the '-2lh' and '2lh' must be opposite and have the same value and the value must be at least 2 or above.
    6. Therefore,
        From 0 - X/2 seconds, we will have the text transform UP the first 100%, so it's out of the view of user.
        Then at X/2 second exact point, we will have translate move DOWN 200% straight away. Two property cancel out each other, so at the end of X/2 second, the text is at the 100% DOWN position (still out of view)
        Then X/2 - X seconds, we have transform move UP ANOTHER second 100%, while the net position effect is at DOWN position at 100% (200% down - the 1st 100% up).
        There is why at X/2 - X second, you can see the text from DOWN 100% position slowly move up to it's original position.

    In order to achieve this, we also have to have the --time-function that reach exactly the middle of the the total height (1/2 of the 200%) at exactly the 50% of the time (X/2). so the switch happens when the text is out of the view.
    Normal easy in (default) or easy out position will not work. Have to choose easy in and out. See screen print pictures.
    https://easingwizard.com/
    */

    /* the transform is moving it up
       then the translate has a  */
    transition:
      transform var(--transition-duration) var(--timing-function),
      /* CAN DELETE: comment on the below and let you see how it got stuck on one side -> just move up */
        translate 0ms calc(var(--transition-duration) / 2);
  }

  &:is(:hover, :focus-within) > * {
    transform: translateY(-2lh);
    /* CAN DELETE: comment on the below and let you see how it got stuck on one side -> just move up */
    translate: 0 2lh;
  }

  &:focus-within {
    outline: 2px solid var(--teal);
    border-radius: 4px;

    > *:focus {
      outline: none;
    }
  }
}

@layer general-styling {
  :root {
    --black: hsl(228, 14%, 7%);
    --white: hsl(220, 33%, 96%);
    --gray: hsl(220, 2%, 51%);
    --teal: hsl(173, 47%, 52%);
  }

  body {
    margin: 0;
    font-family: system-ui;
    font-size: 2rem;
    display: grid;
    min-block-size: 100svh;
    place-content: center;
    background: var(--teal);
    color: var(--white);
  }

  h1 {
    text-transform: uppercase;
    text-align: center;
    font-weight: 900;
    margin: 0;
    color: hsl(from var(--teal) h 20% 15%);
  }

  @layer demo-specific-prettying-up {
    /* Want to keep it an unordered list, and don't really feel
   like the numbers should be anything more than decoration, which
   is why I went with spans with aria-hidden */
    ul:has(.quick-flip) {
      margin: 0;
      padding-block: clamp(3rem, 10vmin, 6rem);
      padding-inline: clamp(5rem, 15vmin, 10rem);
      border-radius: 1rem;
      box-shadow: 0 0 1rem hsl(from var(--black) h s l / 0.4);

      list-style: none;
      text-transform: uppercase;
      font-weight: 900;
      background: var(--black);

      li {
        margin-block: 1rem;
      }

      a {
        text-decoration: none;
        color: var(--white);

        span {
          color: var(--gray);
        }
      }
    }
  }
}
